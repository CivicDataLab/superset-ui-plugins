{"version":3,"file":"24.8d4434baead2377ea20a.bundle.js","sources":["webpack:///../superset-ui-legacy-plugin-chart-horizon/lib/HorizonRow.js"],"sourcesContent":["\"use strict\";exports.__esModule=!0,exports.default=exports.DEFAULT_COLORS=void 0;var _react=_interopRequireDefault(require(\"react\")),_propTypes=_interopRequireDefault(require(\"prop-types\")),_d3Array=require(\"d3-array\"),_d3Scale=require(\"d3-scale\");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _inheritsLoose(a,b){a.prototype=Object.create(b.prototype),a.prototype.constructor=a,a.__proto__=b}var DEFAULT_COLORS=[\"#313695\",\"#4575b4\",\"#74add1\",\"#abd9e9\",\"#fee090\",\"#fdae61\",\"#f46d43\",\"#d73027\"];exports.DEFAULT_COLORS=DEFAULT_COLORS;var propTypes={className:_propTypes.default.string,width:_propTypes.default.number,height:_propTypes.default.number,data:_propTypes.default.arrayOf(_propTypes.default.shape({y:_propTypes.default.number})).isRequired,bands:_propTypes.default.number,colors:_propTypes.default.arrayOf(_propTypes.default.string),colorScale:_propTypes.default.string,mode:_propTypes.default.string,offsetX:_propTypes.default.number,title:_propTypes.default.string,yDomain:_propTypes.default.arrayOf(_propTypes.default.number)},defaultProps={className:\"\",width:800,height:20,bands:DEFAULT_COLORS.length>>1,colors:DEFAULT_COLORS,colorScale:\"series\",mode:\"offset\",offsetX:0,title:\"\",yDomain:void 0},HorizonRow=/*#__PURE__*/function(a){function b(){return a.apply(this,arguments)||this}_inheritsLoose(b,a);var c=b.prototype;return c.componentDidMount=function a(){this.drawChart()},c.componentDidUpdate=function a(){this.drawChart()},c.componentWillUnmount=function a(){this.canvas=null},c.drawChart=function C(){var a=Math.min,c=Math.floor,d=Math.max;if(this.canvas){var e=this.props,f=e.data,g=e.yDomain,h=e.width,j=e.height,k=e.bands,l=e.colors,m=e.colorScale,n=e.offsetX,o=e.mode,p=\"change\"===m?f.map(function(a){return _extends({},a,{y:a.y-f[0].y})}):f,q=this.canvas.getContext(\"2d\");q.imageSmoothingEnabled=!1,q.clearRect(0,0,h,j),q.setTransform(1,0,0,1,0,0),q.translate(.5,.5);var r=h/p.length,s=c(d(0,-(n/r))),t=c(a(p.length,s+h/r));// the data frame currently being shown:\n// skip drawing if there's no data to be drawn\nif(s>p.length)return;// Create y-scale\nfor(var u,v,w=g||(0,_d3Array.extent)(p,function(a){return a.y}),x=w[0],z=w[1],A=(0,_d3Scale.scaleLinear)().domain([0,d(-x,z)]).range([0,j]),y=!1,B=0;B<k;B+=1){q.fillStyle=l[k+B],v=(B+1-k)*j,A.range([k*j+v,v]);// only the current data frame is being drawn i.e. what's visible:\nfor(var D=s;D<t;D++){if(u=p[D].y,0>=u){y=!0;continue}void 0!==u&&q.fillRect(n+D*r,A(u),r+1,A(0)-A(u))}}// draw negative bands\nif(y){\"offset\"===o&&(q.translate(0,j),q.scale(1,-1));for(var i=0;i<k;i++){q.fillStyle=l[k-i-1],v=(i+1-k)*j,A.range([k*j+v,v]);// only the current data frame is being drawn i.e. what's visible:\nfor(var E=s;E<t;E++)(u=p[E].y,!(0<=u))&&q.fillRect(n+E*r,A(-u),r+1,A(0)-A(-u))}}}},c.render=function g(){var a=this,b=this.props,c=b.className,d=b.title,e=b.width,f=b.height;return _react.default.createElement(\"div\",{className:\"horizon-row \"+c},_react.default.createElement(\"span\",{className:\"title\"},d),_react.default.createElement(\"canvas\",{width:e,height:f,ref:function c(b){a.canvas=b}}))},b}(_react.default.PureComponent);HorizonRow.propTypes=propTypes,HorizonRow.defaultProps=defaultProps;var _default=HorizonRow;exports.default=_default;"],"mappings":"AAAA","sourceRoot":""}