{"version":3,"file":"6.fbc6503e0cea6ef7a0f9.bundle.js","sources":["webpack:///../superset-ui-preset-chart-xy/src/components/WithLegend.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable sort-keys */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ParentSize } from '@vx/responsive';\n\nconst propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  legendJustifyContent: PropTypes.oneOf(['center', 'flex-start', 'flex-end']),\n  position: PropTypes.oneOf(['top', 'left', 'bottom', 'right']),\n  renderChart: PropTypes.func.isRequired,\n  renderLegend: PropTypes.func.isRequired,\n  hideLegend: PropTypes.bool,\n};\nconst defaultProps = {\n  className: '',\n  width: 'auto',\n  height: 'auto',\n  legendJustifyContent: undefined,\n  position: 'top',\n  hideLegend: false,\n};\n\nconst LEGEND_STYLE_BASE = {\n  display: 'flex',\n  flexGrow: 0,\n  flexShrink: 0,\n  order: -1,\n  paddingTop: '5px',\n  fontSize: '0.9em',\n};\n\nconst CHART_STYLE_BASE = {\n  flexGrow: 1,\n  flexShrink: 1,\n  flexBasis: 'auto',\n  position: 'relative',\n};\n\nclass WithLegend extends React.Component {\n  getContainerDirection() {\n    const { position } = this.props;\n    switch (position) {\n      case 'left':\n        return 'row';\n      case 'right':\n        return 'row-reverse';\n      case 'bottom':\n        return 'column-reverse';\n      default:\n      case 'top':\n        return 'column';\n    }\n  }\n\n  getLegendJustifyContent() {\n    const { legendJustifyContent, position } = this.props;\n    if (legendJustifyContent) {\n      return legendJustifyContent;\n    }\n    switch (position) {\n      case 'left':\n        return 'flex-start';\n      case 'right':\n        return 'flex-start';\n      case 'bottom':\n        return 'flex-end';\n      default:\n      case 'top':\n        return 'flex-end';\n    }\n  }\n\n  render() {\n    const {\n      className,\n      width,\n      height,\n      position,\n      renderChart,\n      renderLegend,\n      hideLegend,\n    } = this.props;\n\n    if (hideLegend) {\n      return <div className={className}>{renderChart({ width, height })}</div>;\n    }\n\n    const isHorizontal = position === 'left' || position === 'right';\n\n    const style = {\n      display: 'flex',\n      flexDirection: this.getContainerDirection(),\n    };\n    if (width) {\n      style.width = width;\n    }\n    if (height) {\n      style.height = height;\n    }\n\n    const chartStyle = { ...CHART_STYLE_BASE };\n    if (isHorizontal) {\n      chartStyle.width = 0;\n    } else {\n      chartStyle.height = 0;\n    }\n\n    const legendDirection = isHorizontal ? 'column' : 'row';\n    const legendStyle = {\n      ...LEGEND_STYLE_BASE,\n      flexDirection: legendDirection,\n      justifyContent: this.getLegendJustifyContent(),\n    };\n\n    return (\n      <div className={`with-legend ${className}`} style={style}>\n        <div className=\"legend-container\" style={legendStyle}>\n          {renderLegend({\n            // Pass flexDirection for @vx/legend to arrange legend items\n            direction: legendDirection,\n          })}\n        </div>\n        <div className=\"main-container\" style={chartStyle}>\n          <ParentSize>\n            {parent =>\n              parent.width > 0 && parent.height > 0\n                ? // Only render when necessary\n                  renderChart(parent)\n                : null\n            }\n          </ParentSize>\n        </div>\n      </div>\n    );\n  }\n}\n\nWithLegend.propTypes = propTypes;\nWithLegend.defaultProps = defaultProps;\n\nexport default WithLegend;\n"],"mappings":"AAuBA","sourceRoot":""}